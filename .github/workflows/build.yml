name: build

on:
  push:
    tags:
      - 'v*.*.*'
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: [ "golangci-lint" ]
    types:
      - completed

defaults:
  run:
    working-directory: ./app
    
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: testapp_db
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
          
      - name: Create DB schema
        run: |
          createdb -U ${{ env.POSTGRES_USER }} -h localhost ${{ env.POSTGRES_DATABASE }}
          psql -U ${{ env.POSTGRES_USER }} -h localhost -d ${{ env.POSTGRES_DATABASE }} < ../assets/schema.sql
        env:
          env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: testapp_db
          POSTGRES_PORT: 5432
          PGPASSWORD: postgres
          
      - name: Run tests
        run: |
          go test -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: vrekshta/testapp
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push App Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Push Docs Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./docs
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
    
        
        
      
      
      
